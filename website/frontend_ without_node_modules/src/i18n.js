// src/i18n.js
import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import HttpApi from 'i18next-http-backend';
import LanguageDetector from 'i18next-browser-languagedetector';

i18n
  .use(HttpApi) // Loads translations from your /public/locales folder
  .use(LanguageDetector) // Detects user language
  .use(initReactI18next) // Passes i18n instance to react-i18next
  .init({
    supportedLngs: ['en', 'fr', 'ar'], // Add all supported languages
    fallbackLng: 'fr', // Default language if detection fails or selected lang translations not found
    debug: process.env.NODE_ENV === 'development', // Enable debug output in development
    detection: {
      // Order and from where user language should be detected
      order: ['localStorage', 'navigator', 'htmlTag', 'cookie', 'path', 'subdomain'],
      // Cache user language in localStorage
      caches: ['localStorage'],
    },
    backend: {
      // Path where translations will be loaded from
      loadPath: '/locales/{{lng}}/translation.json',
    },
    react: {
      useSuspense: true, // Essential for HttpApi to work with React Suspense
    },
    interpolation: {
      escapeValue: false, // React already protects from XSS
    },
  });

export default i18n;