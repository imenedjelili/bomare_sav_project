/* frontend/src/ChatInterface.css */

/* Styles for the top-level wrapper of the entire chat module/interface */
.chat-module-container {
    display: flex; /* This maintains the original App.js structure */
    height: 100vh; /* For standalone running. When integrated, this might change to 100% or a fixed size */
    overflow: hidden; /* Important for managing internal scrolling without affecting page scroll */
    position: relative; /* Good for any absolute/fixed positioning of children or the widget itself */
    background-color: var(--bg-main); /* The main background for the chat interface */
  }
  
  /* Styles for when the entire chat module is in a loading state */
  .chat-module-loading {
      align-items: center;
      justify-content: center;
      text-align: center;
      font-size: var(--fs-md);
      color: var(--text-light); /* Ensure good contrast for loading text */
      /* background-color will be inherited from .chat-module-container if both are on the same element */
  }
  .chat-module-loading svg { /* Specific to the loader icon in this loading state */
      /* animation: spin 1s linear infinite; Ensure @keyframes spin is defined in index.css */
      /* margin-bottom: 16px; (This was in App.js, good to keep here for styling the loader) */
  }
  
  
  /* --- Sidebar --- */
  .sidebar {
    width: var(--sidebar-width);
    background-color: var(--bg-sidebar);
    color: var(--text-light); /* Sidebar text color */
    display: flex;
    flex-direction: column;
    transition: transform var(--transition-normal);
    position: fixed; /* Or absolute if .chat-module-container is its positioning context */
    left: 0; top: 0; bottom: 0;
    z-index: 1000; /* Ensure sidebar is above other chat module content if overlapping */
    border-right: 1px solid var(--border-color-light);
    transform: translateX(0);
    box-shadow: var(--shadow-lg);
  }
  .sidebar.closed {
    transform: translateX(calc(-1 * var(--sidebar-width)));
  }
  
  .sidebar-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 12px 0 8px; /* Adjust padding for icon buttons */
    height: var(--top-bar-height);
    border-bottom: 1px solid var(--border-color-light);
    flex-shrink: 0; /* Prevent shrinking */
  }
  .sidebar-action-button { /* Generic style for sidebar header buttons */
    padding: 10px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--fs-lg); /* Icon size */
    color: var(--text-dark); /* Default color for icons */
    transition: var(--transition-fast);
  }
  .sidebar-action-button:hover {
    background-color: var(--bg-hover-medium);
    color: var(--text-light); /* Icon color on hover */
  }
  .sidebar-header .new-chat-icon-button { /* Specific styling for the new chat button if needed */
    font-size: var(--fs-xl); /* Slightly larger for plus icon */
  }
  
  .sidebar-content {
    flex-grow: 1;
    padding: 12px 0; /* Top/bottom padding, side padding handled by items */
    overflow-y: auto; /* Enable scrolling for chat history */
  }
  .history-title {
    padding: 8px 16px 4px;
    font-size: var(--fs-xs); color: var(--text-dark);
    text-transform: uppercase; font-weight: 600; letter-spacing: 0.05em;
  }
  .history-item {
    display: flex; align-items: center; padding: 9px 16px;
    cursor: pointer; font-size: var(--fs-sm); color: var(--text-medium);
    margin: 2px 8px; border-radius: 6px;
    white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
    transition: var(--transition-fast);
  }
  .history-item svg { margin-right: 10px; flex-shrink: 0; font-size: var(--fs-base); }
  .history-item:hover { background-color: var(--bg-hover-medium); color: var(--text-light); }
  .history-item.active { background-color: var(--bg-active); color: var(--text-light); font-weight: 500; }
  .history-item.active:hover { background-color: #137ca9; /* Darker shade of active or a specific variable */ }
  
  
  .sidebar-footer {
    padding: 12px 16px; border-top: 1px solid var(--border-color-light);
    flex-shrink: 0; display: flex; align-items: center; justify-content: flex-end; gap: 8px;
  }
  .language-control, .settings-button, .footer-icon-button { /* Grouping similar footer buttons */
    position: relative; padding: 10px; border-radius: 50%;
    display: flex; align-items: center; justify-content: center;
    font-size: var(--fs-lg); color: var(--text-dark); transition: var(--transition-fast);
  }
  .language-control:hover, .settings-button:hover, .footer-icon-button:hover {
    background-color: var(--bg-hover-medium); color: var(--text-light);
  }
  .language-dropdown {
    position: absolute; bottom: calc(100% + 8px); right: 0;
    background-color: #3E456B; /* Could be var(--bg-dropdown) or similar dark tone */
    border: 1px solid var(--border-color-medium);
    border-radius: 8px; padding: 8px; z-index: 1010; /* Higher than sidebar content */
    min-width: 120px; box-shadow: var(--shadow-md);
  }
  .language-dropdown button {
    display: block; width: 100%; padding: 8px 12px; text-align: left;
    font-size: var(--fs-sm); border-radius: 4px; color: var(--text-medium); /* Dropdown item text color */
  }
  .language-dropdown button:hover { background-color: var(--bg-hover-medium); color: var(--text-light); }
  .language-dropdown button.active { background-color: var(--bg-active); color: var(--text-light); font-weight: 500;}
  
  
  /* --- Main Content (within the chat module) --- */
  .main-content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    /* height: 100vh; // This should be handled by .chat-module-container */
    width: 100%; /* Takes full width of its parent within .chat-module-container */
    margin-left: 0; /* Initial state if sidebar isn't considered "overlay" */
    transition: margin-left var(--transition-normal), width var(--transition-normal);
    position: relative; /* For context of chat-interaction-area */
  }
  .main-content.sidebar-open {
    margin-left: var(--sidebar-width);
    width: calc(100% - var(--sidebar-width));
  }
  
  /* Wrapper for chat area and input, for conditional centering and max-width */
  .chat-interaction-area {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Important for controlling scroll on .chat-area when it has messages */
    width: 100%;
    max-width: 900px; /* Max width for content area for readability */
    margin: 0 auto; /* Center the content block within .main-content */
    padding: 0 24px; /* Horizontal padding for content inside */
  }
  
  /* Styles for when input is centered (initial state) */
  .main-content.input-centered .chat-interaction-area {
    justify-content: center; /* Vertically center its content */
    align-items: center; /* Horizontally center if not full width */
    display: flex; /* To enable align-items on direct children with flex-direction: column */
    flex-direction: column;
    padding-bottom: 5vh; /* Add some padding to push it up a bit from absolute center */
  }
  /* This targets the .chat-area div when it contains the welcome message */
  .main-content.input-centered .chat-area.welcome-message {
    flex-grow: 0; /* Don't let chat area expand in this state */
    text-align: center; /* Center welcome message text */
    margin-bottom: 32px; /* Space before the centered input bar */
    display: flex;
    flex-direction: column;
    align-items: center; /* Centers content of welcome message if it had block elements */
  }
  /* Text for welcome message (logo is in top bar) */
  .welcome-message h2 { /* This class is on the parent of h2/p in ChatInterface.js */
    font-size: var(--fs-xl); font-weight: 600; color: var(--text-light); margin-bottom: 10px;
  }
  .welcome-message p {
    font-size: var(--fs-base); color: var(--text-medium); max-width: 480px; margin: 0 auto; line-height: 1.6;
  }
  /* Centered Input Bar Container - when .input-centered is active on main-content */
  .main-content.input-centered .input-bar-container {
      width: 100%;
      max-width: 600px; /* Or your desired width for the input bar in this state */
  }
  
  
  /* Styles for when input is at the bottom (active chat) */
  .main-content.input-bottom .chat-interaction-area {
    justify-content: flex-end; /* Pushes input bar container to bottom */
  }
  /* This targets .chat-area div when it contains actual chat messages */
  .main-content.input-bottom .chat-area {
    flex-grow: 1; /* Takes up available space for messages */
    overflow-y: auto; /* Enable scrolling for messages */
    padding-bottom: 16px; /* Space before fixed input bar */
  }
  /* .main-content.input-bottom .input-bar-container is handled by generic input-bar-container styles below and stateful .main-content.input-bottom variants for the wrapper */
  
  
  /* --- Top Bar --- */
  .top-bar {
    display: flex; align-items: center; justify-content: space-between;
    height: var(--top-bar-height); padding: 0 16px;
    background-color: var(--bg-main); /* Should match .chat-module-container bg */
    flex-shrink: 0; position: relative; /* For positioning logo and switcher */
  }
  .hamburger-button {
    padding: 10px; border-radius: 50%; display: flex;
    font-size: var(--fs-xl); color: var(--text-dark);
    transition: var(--transition-fast);
    z-index: 5; /* Above logo/switcher if they overlap by chance */
  }
  .hamburger-button:hover { background-color: var(--bg-hover-light); color: var(--text-light); }
  
  .top-bar-logo-centered {
    position: absolute; /* Centered within top-bar */
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    align-items: center;
  }
  .top-bar-logo-centered img {
    height: 30px; /* Adjust logo height for top bar */
    max-width: 150px; /* Prevent it from being too wide if logo is wide */
    object-fit: contain;
  }
  
  /* Mode Switcher IN TOP BAR (Positioned to the right) */
  .mode-switcher-container.top-bar-right-item {
    /* Positioned by flexbox of .top-bar (justify-content: space-between) and margin-left: auto */
    display: flex;
    background-color: var(--primary-brand-medium);
    border-radius: 8px;
    padding: 4px;
    box-shadow: var(--shadow-sm);
    margin-left: auto; /* Pushes it to the right when hamburger is on the left */
    z-index: 4; /* Below hamburger button if overlap is possible */
  }
  .mode-switcher-container button {
    padding: 6px 12px;
    font-size: 0.8rem; /* Or var(--fs-sm) */
    font-weight: 500;
    color: var(--text-medium);
    border-radius: 6px;
    transition: var(--transition-fast);
    white-space: nowrap; /* Prevent text wrapping on small buttons */
  }
  .mode-switcher-container button:hover:not(.active) { color: var(--text-light); }
  .mode-switcher-container button.active {
    background-color: var(--bg-active); color: var(--text-light); box-shadow: var(--shadow-sm);
  }
  
  
  /* --- Chat Area (actual messages content) --- */
  .chat-area { /* General styling for when it contains messages */
    display: flex;
    flex-direction: column;
    gap: 16px; /* Space between message-wrapper elements */
  }
  .message-wrapper { display: flex; width: 100%; }
  .message-wrapper.user { justify-content: flex-end; }
  .message-wrapper.bot { justify-content: flex-start; } /* Default alignment for bot */
  .message-wrapper.system { justify-content: center; } /* System messages centered */
  
  .message {
    max-width: 75%; padding: 10px 16px; border-radius: 18px;
    line-height: 1.5; font-size: var(--fs-sm); word-wrap: break-word; box-shadow: var(--shadow-sm);
  }
  .message-wrapper.user .message { background-color: var(--bg-chat-user); color: var(--text-light); border-bottom-right-radius: 6px; }
  .message-wrapper.bot .message { background-color: var(--bg-chat-bot); color: var(--text-medium); border-bottom-left-radius: 6px;}
  .message-wrapper.system .message {
    background-color: transparent; color: var(--text-dark); /* Or var(--text-medium) for better visibility */
    font-style: italic; font-size: var(--fs-xs); text-align: center; box-shadow: none; padding: 4px 0;
  }
  
  .loading-indicator { /* Container for bot typing indicator within message flow */
    display: flex;
    justify-content: flex-start; /* Aligns like a bot message */
    /* gap will be handled by .chat-area parent if direct child, or set margin if needed */
  }
  .loading-indicator-dots { /* The visual dots element */
    background-color: var(--bg-chat-bot); /* Same as bot message bg */
    color: var(--text-medium); padding: 12px 18px;
    border-radius: 18px; border-bottom-left-radius: 6px; /* Matches bot message bubble */
    display: flex; align-items: center;
    box-shadow: var(--shadow-sm);
  }
  .loading-indicator-dots span {
    display: inline-block; width: 7px; height: 7px; margin: 0 2.5px;
    background-color: var(--primary-brand-accent); border-radius: 50%;
    animation: bounce 1.4s infinite ease-in-out both;
  }
  .loading-indicator-dots span:nth-child(1) { animation-delay: -0.32s; }
  .loading-indicator-dots span:nth-child(2) { animation-delay: -0.16s; }
  /* Ensure @keyframes bounce is defined in index.css */
  
  
  /* --- Input Bar --- */
  .input-bar-container {
    width: 100%; /* Takes full width of its parent (.chat-interaction-area) */
    padding: 12px 0; /* Vertical padding, horizontal handled by parent centering */
    flex-shrink: 0; /* Prevent shrinking when messages grow */
  }
  /* Specific background for input bar when at bottom of screen */
  .main-content.input-bottom .input-bar-container {
    background-color: var(--bg-input-bottom);
    border-top: 1px solid var(--border-color-light);
  }
  
  .input-bar-wrapper {
    display: flex; align-items: center;
    background-color: var(--bg-input-initial); /* For centered initial input state */
    border-radius: 12px;
    padding: 8px;
    border: 1px solid var(--border-color-medium);
    transition: var(--transition-fast); min-height: 56px;
    box-shadow: var(--shadow-md);
  }
  /* Modify wrapper style when input bar is at the bottom */
  .main-content.input-bottom .input-bar-wrapper {
      background-color: transparent; /* Container itself handles BG */
      box-shadow: none; /* Container handles shadow/border effects */
      border: 1px solid var(--border-color-light); /* Subtle border against dark bg of container */
      border-radius: 28px; /* Pill shape for bottom input */
      padding: 6px 8px 6px 12px; /* Fine-tune padding for pill shape */
  }
  .input-bar-wrapper:focus-within {
    border-color: var(--primary-brand-accent);
    box-shadow: 0 0 0 3px rgba(22, 144, 191, 0.4); /* Focus ring using accent color */
  }
  
  .input-bar-button { /* Generic styles for icon buttons inside input bar */
    color: var(--text-dark); font-size: var(--fs-lg); padding: 10px;
    border-radius: 50%; display: flex; align-items: center; justify-content: center;
    transition: var(--transition-fast); margin: 0 2px; /* Small margin between buttons */
  }
  .input-bar-button:hover:not(:disabled) { color: var(--text-light); background-color: var(--bg-hover-medium); }
  .input-bar-button:disabled { opacity: 0.4; cursor: not-allowed; }
  
  .input-bar-wrapper input[type="text"] {
    flex-grow: 1; background-color: transparent; border: none;
    color: var(--text-light); padding: 10px 12px; font-size: var(--fs-base); outline: none;
    min-width: 0; /* Important for flex items that can shrink too much */
  }
  .input-bar-wrapper input[type="text"]::placeholder { color: var(--text-dark); opacity: 0.8;}
  
  .send-button.input-bar-button { /* Specific styling for the send button */
    background-color: var(--primary-brand-accent); color: var(--text-light);
    margin-left: 6px; /* Space from the text input or other buttons */
    font-size: var(--fs-lg); width: 40px; height: 40px; padding: 0; /* Ensure padding is 0 if width/height set explicitly */
    /* border-radius, display, align-items, justify-content are inherited from .input-bar-button */
    transition: var(--transition-fast);
  }
  /* If send button needs slight adjustment for pill shape input bar */
  .main-content.input-bottom .send-button.input-bar-button {
      width: 38px; height: 38px;
  }
  .send-button.input-bar-button:hover:not(:disabled) {
      background-color: #137ca9; /* Darker shade of accent color or defined var */
      /* color: var(--text-light); Inherited, but can be explicit */
  }
  .send-button.input-bar-button:disabled {
      background-color: var(--primary-brand-medium); /* Disabled BG color */
      color: var(--text-dark); opacity: 0.7; /* Disabled text color and opacity */
  }
  /* --- ChatInterface.css --- */

/* ... (all your existing styles remain unchanged) ... */


/* --- TARGETED FIX FOR INPUT BAR POSITIONING --- */

/* When the chat is active and input bar should be at the bottom: */
.main-content.input-bottom .chat-interaction-area {
  /* This is the CRITICAL part. 
     Ensure chat-interaction-area uses flex to position its children (ChatArea and InputBar). */
  display: flex;
  flex-direction: column;
  /* flex-grow: 1; -- This should already be on .chat-interaction-area if it's meant to fill vertical space within .main-content */
  /* justify-content: flex-end; -- This was in your original. If it works, keep it.
                                   If not, the flex-grow on child ChatArea is more direct. */
}

/* This targets the div rendered by your ChatArea.js component (which has className="chat-area")
   OR the div with className="chat-area welcome-message" when !isChatCurrentlyActive */
.main-content.input-bottom .chat-interaction-area > .chat-area {
  /* Make the message area take all available space above the input bar. */
  flex-grow: 1;
  overflow-y: auto; /* Ensure scrolling for messages */
  /* any other existing styles for .chat-area like padding should be preserved */
}

/* Ensure InputBar does not shrink when messages grow */
.main-content.input-bottom .input-bar-container { /* Assuming your InputBar component has a root div with this class */
  flex-shrink: 0;
  /* Your existing styles for background, border-top etc. for when it's at the bottom */
}


/* --- Styles for when the input is centered (initial state) --- */
/* Your existing .main-content.input-centered rules should already handle this: */
/*
.main-content.input-centered .chat-interaction-area {
  justify-content: center; 
  align-items: center; 
  display: flex; 
  flex-direction: column;
  padding-bottom: 5vh; 
}
.main-content.input-centered .chat-area.welcome-message {
  flex-grow: 0; 
  text-align: center; 
  margin-bottom: 32px; 
  display: flex;
  flex-direction: column;
  align-items: center; 
}
.main-content.input-centered .input-bar-container {
    width: 100%;
    max-width: 600px; 
}
*/

/* ... (all your other existing styles remain unchanged) ... */