/* src/App.css */

/* --- Main App Layout Containers --- */
/* .app-container typically wraps everything in your App.js return if you have one.
   If #root is your main wrapper, body styles from index.css already apply.
   If not, and if you have a <div className="app-container"> in App.js, these ensure consistency. */
.app-container {
  display: flex;
  /* If your top-level App.js structure is flex (e.g., for a global sidebar) */
  min-height: 100vh;
  /* Ensure it takes full viewport height */
  background-color: transparent;
  /* Allows body's glow from index.css to show through */
}

/* .main-content is a common class for the area beside a potential global sidebar.
     If you apply the glows directly to body/#root, this also needs to be transparent
     or have its own layered glow effects. */
.main-content {
  flex-grow: 1;
  padding: 25px 35px;
  /* Default padding for main content areas */
  overflow-y: auto;
  /* Allow content to scroll if it exceeds viewport height */
  position: relative;
  /* For absolutely positioned children or pseudo-elements if needed */
  background-color: transparent;
  /* Allows body's glow to show through */
}


/* --- Page Header (Used on pages like Knowledge Base, etc.) --- */
.page-header {
  margin-bottom: 35px;
  text-align: center;
  padding-top: 10px;
  /* Some space from the top or previous element */
}

.page-header h1 {
  font-size: 2.2rem;
  /* Larger than your existing for more impact */
  font-weight: 700;
  /* Bolder */
  margin-top: 0;
  margin-bottom: 15px;
  /* More space below title */
  color: var(--text-color);
  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  /* Subtle text shadow for depth */
}

.page-header p {
  /* Subtitle for page headers */
  color: var(--text-color-secondary);
  font-size: 1rem;
  max-width: 650px;
  margin-left: auto;
  margin-right: auto;
  line-height: 1.6;
  /* Increased for readability */
}

/* --- General Card Styling (Matches Knowledge Base mockup cards somewhat) --- */
.custom-card {
  background-color: var(--card-bg);
  padding: 25px 30px;
  /* Increased padding */
  border-radius: var(--border-radius-lg, 14px);
  /* More rounded like KB mockup */
  margin-bottom: 25px;
  /* Increased margin */
  border: 1px solid var(--border-color);
  /* Subtle border */
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1), 0 0 25px var(--shadow-color-accent, rgba(93, 95, 239, 0.05));
  /* Glow effect */
  position: relative;
  transition: transform var(--anim-fast) ease, box-shadow var(--anim-fast) ease;
}

.custom-card:hover {
  /* Optional hover effect */
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15), 0 0 35px var(--shadow-color-accent, rgba(93, 95, 239, 0.1));
}


/* === General Button Styles (Your existing styles are good, minor theme consistency tweaks) === */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 10px 22px;
  /* Slightly more padding */
  border: 1px solid transparent;
  border-radius: var(--border-radius-md, 10px);
  /* Consistent medium rounding */
  font-size: 0.9rem;
  /* Base font size for buttons */
  font-weight: 500;
  color: var(--text-color);
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  transition: all var(--anim-fast) ease;
  min-width: 130px;
  /* Ensure buttons have a decent minimum width */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  /* Subtle shadow for depth */
}

.btn:focus-visible {
  outline: 2px solid var(--accent-color-hover);
  outline-offset: 2px;
}

.btn:focus:not(:focus-visible) {
  outline: none;
}

.btn:active {
  transform: translateY(1px);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.btn-primary {
  background-color: var(--accent-color);
  border-color: var(--accent-color);
  color: var(--text-color);
  box-shadow: 0 3px 8px hsla(var(--accent-color-hsl-values), 0.3),
    inset 0 -1px 1px rgba(0, 0, 0, 0.1);
}

.btn-primary:hover {
  background-color: var(--accent-color-hover);
  border-color: var(--accent-color-hover);
  box-shadow: 0 4px 12px hsla(var(--accent-color-hsl-values), 0.4);
}

.btn-secondary {
  /* For less prominent actions, like "Cancel" or secondary choices */
  background-color: var(--card-bg-lighter);
  border: 1px solid var(--border-color);
  color: var(--text-color-secondary);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.btn-secondary:hover {
  background-color: var(--card-bg);
  border-color: var(--text-color-secondary);
  color: var(--text-color);
}

.btn-icon {
  gap: 8px;
}

.btn-icon svg {
  width: 1em;
  height: 1em;
}

.btn-lg {
  padding: 12px 28px;
  font-size: 1rem;
  min-width: 160px;
}

.btn-sm {
  padding: 6px 14px;
  font-size: 0.8rem;
  min-width: auto;
}

.btn-sm.btn-icon {
  gap: 5px;
}


/* --- GLOBAL Input Field Styles (Dark Inset by Default) --- */
.input-field,
.select-field,
.textarea-field {
  width: 100%;
  padding: 12px 16px;
  /* Slightly more padding */
  margin-bottom: 18px;
  /* Consistent margin */
  background-color: var(--input-bg);
  border: 1px solid var(--input-border-color);
  /* Use defined input border color */
  color: var(--text-color);
  border-radius: var(--border-radius-md, 10px);
  /* Consistent medium rounding */
  font-size: 0.95rem;
  /* Slightly larger for readability */
  line-height: 1.5;
  transition: border-color var(--anim-fast) ease, box-shadow var(--anim-fast) ease;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  min-height: 48px;
  /* Increased min height for better touch targets */
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.15);
  /* Subtle inset shadow for depth */
}

.input-field::placeholder,
.textarea-field::placeholder {
  color: var(--text-color-secondary);
  opacity: 0.6;
}

/* Softer placeholder */
.select-field option[value=""] {
  color: var(--text-color-secondary);
  opacity: 0.6;
}

.select-field option {
  background-color: var(--input-bg);
  color: var(--text-color);
}

/* Global Focus for dark inputs */
.input-field:focus,
.select-field:focus,
.textarea-field:focus {
  border-color: var(--accent-color);
  outline: none;
  box-shadow: 0 0 0 3px hsla(var(--accent-color-hsl-values), 0.35), inset 0 1px 3px rgba(0, 0, 0, 0.1);
  /* Keep inset shadow */
}

/* Global Disabled for dark inputs */
.input-field[disabled],
.select-field[disabled],
.textarea-field[disabled] {
  background-color: var(--primary-bg);
  opacity: 0.5;
  cursor: not-allowed;
  /* Reduced opacity */
  box-shadow: none;
  /* Remove inset shadow when disabled */
}

/* Global Custom Arrow for ALL Select Fields */
.select-field {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23A0A0B0' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
  /* Softer arrow color */
  background-repeat: no-repeat;
  background-position: right 18px center;
  /* Adjusted position */
  background-size: 10px 10px;
  padding-right: 45px !important;
  /* Increased padding for arrow */
}

.textarea-field {
  resize: vertical;
  min-height: 120px;
}

.label {
  display: block;
  margin-bottom: 10px;
  font-weight: 500;
  color: var(--text-color);
  font-size: 0.9rem;
}

.label .required {
  color: var(--status-danger-color);
  margin-left: 4px;
  font-weight: 700;
}

/* Use danger color */

/* --- Tabs (Generic base - Refine based on specific tab usage) --- */
.tabs-container {
  display: flex;
  gap: 5px;
  margin-bottom: 25px;
  /* Increased margin */
  border-bottom: 2px solid var(--border-color);
}

/* Line like mockups */
.tab-button {
  padding: 10px 20px;
  font-size: 0.9rem;
  font-weight: 500;
  background: none;
  border: none;
  color: var(--text-color-secondary);
  cursor: pointer;
  border-bottom: 3px solid transparent;
  /* For active indicator line */
  margin-bottom: -2px;
  /* Overlap container border */
  transition: color var(--anim-fast) ease, border-color var(--anim-fast) ease;
}

.tab-button:hover:not(.active) {
  color: var(--text-color);
  border-bottom-color: var(--card-bg-lighter);
  /* Subtle hover indicator */
}

.tab-button.active {
  color: var(--accent-color);
  /* Or --accent-secondary like KB mockup tabs */
  border-bottom-color: var(--accent-color);
  /* Or --accent-secondary */
  font-weight: 600;
}

/* --- Status Badges (COLORED PILL Badges) --- */
.status-badge {
  padding: 6px 14px;
  /* Slightly more padding */
  border-radius: var(--border-radius-pill, 20px);
  /* Fully rounded pill */
  font-size: 0.78rem;
  /* Consistent size */
  font-weight: 600;
  display: inline-block;
  color: var(--text-color);
  /* Default white text, override per status */
  text-align: center;
  line-height: 1.3;
  text-transform: capitalize;
  border: 1px solid transparent;
  /* Base for border */
}

.status-badge.status-active,
.status-badge.status-success {
  background-color: var(--status-success-bg);
  color: var(--status-success-color);
  border-color: hsla(var(--status-success-color-rgb), 0.3);
}

.status-badge.status-expired,
.status-badge.status-danger {
  background-color: var(--status-danger-bg);
  color: var(--status-danger-color);
  border-color: hsla(var(--status-danger-color-rgb), 0.3);
}

.status-badge.status-pending,
.status-badge.status-warning {
  background-color: var(--status-warning-bg);
  color: var(--status-warning-color);
  border-color: hsla(var(--status-warning-color-rgb), 0.3);
}

.status-badge.status-info {
  /* For general info/in-progress */
  background-color: var(--status-info-bg);
  color: var(--status-info-color);
  border-color: hsla(var(--status-info-color-rgb), 0.3);
}


/* --- Card Action Icon (Example: view icon in KB mockup) --- */
.card-action-icon {
  background-color: var(--accent-secondary);
  /* Use blue from mockup */
  color: white;
  width: 38px;
  height: 38px;
  /* Slightly larger */
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color var(--anim-fast) ease, transform var(--anim-fast) ease, box-shadow var(--anim-fast) ease;
  box-shadow: 0 2px 8px rgba(48, 144, 199, 0.2);
  /* Blue shadow */
}

.card-action-icon:hover {
  background-color: var(--accent-secondary-light);
  transform: scale(1.05);
  box-shadow: 0 4px 12px rgba(48, 144, 199, 0.3);
}

.card-action-icon svg {
  width: 18px;
  height: 18px;
}


/* --- Custom Checkboxes (Global Style - Updated for consistency) --- */
.custom-checkbox-group {
  display: flex;
  gap: 25px;
  align-items: center;
}

.custom-checkbox-label {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 0.9rem;
  color: var(--text-color-secondary);
  cursor: pointer;
  position: relative;
  user-select: none;
}

.custom-checkbox-label input[type="checkbox"] {
  opacity: 0;
  position: absolute;
  width: 0;
  height: 0;
}

.custom-checkbox-box {
  width: 18px;
  height: 18px;
  /* Slightly larger */
  background-color: var(--input-bg);
  /* Match input field bg */
  border: 1px solid var(--input-border-color);
  /* Match input field border */
  border-radius: 4px;
  /* Slightly rounded square */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  /* Center checkmark */
  position: relative;
  transition: background-color var(--anim-fast) ease, border-color var(--anim-fast) ease;
}

.custom-checkbox-label input[type="checkbox"]:checked+.custom-checkbox-box {
  background-color: var(--accent-color);
  border-color: var(--accent-color);
}

.custom-checkbox-box::after {
  /* Checkmark */
  content: '';
  width: 5px;
  height: 10px;
  /* Adjusted for better checkmark */
  border: solid white;
  border-width: 0 2.5px 2.5px 0;
  /* Thicker checkmark */
  transform: rotate(45deg) translate(-1px, -1px);
  /* Fine-tune position */
  opacity: 0;
  transition: opacity var(--anim-fast) ease;
}

.custom-checkbox-label input[type="checkbox"]:checked+.custom-checkbox-box::after {
  opacity: 1;
}

.custom-checkbox-label:hover .custom-checkbox-box {
  border-color: var(--accent-color);
}

/* Hover indication */
.custom-checkbox-label input[type="checkbox"]:focus-visible+.custom-checkbox-box {
  outline: 2px solid var(--accent-color-hover);
  outline-offset: 1px;
}

/* Utility Animations (Keep from your index.css) */
@keyframes fadeInSmooth {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.fade-in {
  animation: fadeInSmooth var(--anim-medium) ease-out forwards;
  opacity: 0;
}

.fade-in-up {
  animation: fadeInUp var(--anim-medium) ease-out forwards;
  opacity: 0;
}

.slide-in-left {
  animation: slideInLeft var(--anim-medium) ease-out forwards;
  opacity: 0;
}

.delay-100 {
  animation-delay: 0.1s;
}

.delay-200 {
  animation-delay: 0.2s;
}

/* ... other delays ... */