// src/components/technician/TechnicianAppSidebar.js
import React from 'react';
import { NavLink } from 'react-router-dom';
import { FiGrid, FiYoutube, FiHelpCircle, FiUser, FiTool, FiSettings, FiLogOut, FiHardDrive, FiAlertTriangle } from 'react-icons/fi';
import { supabase } from '../../supabaseClient'; // For logout
import { useNavigate } from 'react-router-dom';
import '../Sidebar.css'; // Reuse customer sidebar CSS or create TechnicianAppSidebar.css

const TechnicianAppSidebar = React.forwardRef(({ isOpen, technicianInfo }, ref) => {
    const navigate = useNavigate();

    const handleLogout = async () => {
        const { error } = await supabase.auth.signOut();
        if (error) console.error("Logout error:", error);
        else navigate('/login', { replace: true });
    };

    const name = technicianInfo?.name || "Technicien";
    const role = technicianInfo?.role || "Technicien";

    return (
        <aside className={`sidebar ${isOpen ? 'open' : ''}`} ref={ref}>
            <div className="sidebar-profile">
                <div className="avatar-placeholder">
                    {/* Basic initial or icon */}
                    {name ? name.substring(0,1).toUpperCase() : <FiUser size={20}/>}
                </div>
                <div className="user-info">
                    <h4>{name}</h4>
                    <p className="text-secondary">{role}</p>
                </div>
            </div>

            <nav className="sidebar-nav-main">
                <NavLink to="/technician/dashboard" className={({ isActive }) => isActive ? "active" : ""} end>
                    <FiGrid /> Tableau de Bord
                </NavLink>
                <NavLink to="/technician/videos" className={({ isActive }) => isActive ? "active" : ""}>
                    <FiYoutube /> Vidéothèque
                </NavLink>
                <NavLink to="/technician/work-orders" className={({ isActive }) => isActive ? "active" : ""}>
                    <FiTool /> Ordres de Travail
                </NavLink>
                <NavLink to="/technician/equipment" className={({ isActive }) => isActive ? "active" : ""}>
                    <FiHardDrive /> Équipement Client
                </NavLink>
                <NavLink to="/technician/alerts" className={({ isActive }) => isActive ? "active" : ""}>
                    <FiAlertTriangle /> Alertes Ouvertes
                </NavLink>
                <NavLink to="/technician/faq" className={({ isActive }) => isActive ? "active" : ""}>
                    <FiHelpCircle /> FAQ Technique
                </NavLink>
                 <NavLink to="/technician/profile" className={({ isActive }) => isActive ? "active" : ""}>
                    <FiUser /> Mon Profil
                </NavLink>
                 <NavLink to="/technician/support" className={({ isActive }) => isActive ? "active" : ""}>
                    <FiHelpCircle /> Support Intern
                </NavLink>
            </nav>

            <div className="sidebar-bottom-actions">
                <NavLink
                    to="/technician/settings" // Assuming a settings page or repurpose
                    className={({ isActive }) => `sidebar-action-icon-btn ${isActive ? "active-icon" : ""}`}
                    title="Paramètres"
                >
                    <FiSettings />
                </NavLink>
                <button
                    onClick={handleLogout}
                    className="sidebar-action-icon-btn"
                    title="Déconnexion"
                >
                    <FiLogOut />
                </button>
            </div>
        </aside>
    );
});

export default TechnicianAppSidebar;